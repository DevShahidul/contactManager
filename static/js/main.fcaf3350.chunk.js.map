{"version":3,"sources":["Context.js","Component/Layout/Header.js","Component/Contact/Contact.js","Component/Contact/Contacts.js","Component/Layout/InputFieldGroup.js","Component/Contact/AddContact.js","Component/Contact/EditContact.js","Component/Pages/About.js","Component/Pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","action","state","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Header","className","href","to","Contact","showInfo","showOnClick","onDeleteContact","a","delete","name","email","phone","address","style","cursor","marginLeft","onClick","float","color","bind","marginRight","fontSize","lineHeight","JSON","stringify","Contacts","key","InputFieldGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updateContact","match","params","put","street","suite","city","zipcode","About","NotFound","config","autoA11y","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.fcaf3350.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (action, state) => {\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT' :\r\n            return{\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT' :\r\n            return{\r\n                ...state,\r\n                contacts: [\r\n                    action.payload,\r\n                    ...state.contacts\r\n                ]\r\n            };\r\n        case 'UPDATE_CONTACT' :\r\n            return{\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            };\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nclass Provider extends Component {\r\n   async componentDidMount(){\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    \r\n        this.setState({\r\n            contacts: res.data\r\n        })\r\n    }\r\n\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(action, state))\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Provider;\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    render(){\r\n        return(\r\n            <header className=\"navbar navbar-dark bg-success navbar-expand-lg\">\r\n                <div className=\"container\">\r\n                    <a href=\"/contactManager\" className=\"navbar-brand\">Contact Manager</a>\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">Add contact</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Consumer } from '../../Context';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showInfo: false\r\n    };\r\n\r\n    showOnClick = () => {\r\n        this.setState({\r\n            showInfo: !this.state.showInfo\r\n        })\r\n    };\r\n\r\n    onDeleteContact = async (dispatch, id) => {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        dispatch({\r\n            type: 'DELETE_CONTACT',\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const { id, name, email, phone, address } = this.props.contact;\r\n\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n                        <div className=\"card card-body mt-3\">\r\n                            <h2 className=\"card-title\">\r\n                                {name}\r\n                                <span style={{cursor: 'pointer', marginLeft: '5px'}} onClick={this.showOnClick} ><i className=\"fas fa-sort-down\"></i></span>\r\n                                <span style={{cursor: 'pointer', float: 'right', color: 'red'}} onClick={this.onDeleteContact.bind(this, dispatch, id)} ><i className=\"fas fa-times\"></i></span>\r\n                                <Link to={`/contact/edit/${id}`} style={{cursor: 'pointer', float: 'right', marginRight: '10px', fontSize: '1.5rem', lineHeight: '38px', color: 'black'}} ><i className=\"fas fa-pencil-alt\"></i></Link>\r\n                            </h2>\r\n                            {this.state.showInfo ? (<ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">\r\n                                    Email: {email}\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                    Phone: {phone}\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                    Address: {JSON.stringify(address)}\r\n                                </li>\r\n                                \r\n                            </ul>) : null}\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../Context';\r\n\r\nclass Contacts extends Component {\r\n    \r\n    render(){\r\n        \r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return(\r\n                        <div className=\"container mt-5\">\r\n                            <h1><span className=\"text-success\">Contacts</span> list</h1>\r\n                            {\r\n                            contacts.map(\r\n                                    contact => <Contact key={contact.id} contact={contact} />\r\n                                )\r\n                            }\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default Contacts;","import React, { Component } from 'react'\r\nimport classnames from 'classnames';\r\n\r\nexport default class InputFieldGroup extends Component {\r\n    render() {\r\n        const { label, name, type, placeholder, onChange, value, error } = this.props;\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label htmlFor={name}>{label}</label>\r\n                <input \r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                        'is-invalid' : error\r\n                    })} \r\n                    type={type} \r\n                    name={name} \r\n                    placeholder={placeholder} \r\n                    value={value} \r\n                    onChange={onChange} \r\n                />\r\n                {error && (<div className=\"invalid-feedback\">{error}</div>)}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nInputFieldGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport InputFieldGroup from '../Layout/InputFieldGroup';\r\n//import uuid from 'uuid';\r\nimport { Consumer } from '../../Context';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        address: '',\r\n        error: {}\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone, address } = this.state;\r\n\r\n        // Check error\r\n        if(name === ''){\r\n            this.setState({\r\n                error: {name: 'Name is required'}\r\n            });\r\n            return;\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({\r\n                error: {email: 'Email is required'}\r\n            });\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({\r\n                error: {phone: 'Phone is required'}\r\n            });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone,\r\n            address\r\n        };\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        dispatch({\r\n            type: 'ADD_CONTACT',\r\n            payload: res.data\r\n        }); \r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            address: {},\r\n            error: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, error } = this.state;\r\n        const { address } = this.state.address;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n                        <div className=\"container mt-5\">\r\n                            <div className=\"card w-100\">\r\n                                <div className=\"card-header\">Add new contact</div>\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                        <InputFieldGroup name=\"name\" label=\"Name\" placeholder=\"Enter name\" onChange={this.onChange} value={name} error={error.name}/>\r\n                                        <InputFieldGroup name=\"email\" label=\"Email\" type=\"email\" placeholder=\"Enter email\" value={email} onChange={this.onChange} error={error.email}/>\r\n                                        <InputFieldGroup name=\"phone\" label=\"Phone\" placeholder=\"Enter phone\" value={phone}  onChange={this.onChange} error={error.phone}/>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"address\">Address</label>\r\n                                            <textarea className='form-control form-control-lg' name=\"address\" placeholder=\"Enter your address\"  onChange={this.onChange} value={address}></textarea>\r\n                                        </div>\r\n                                        <input className=\"btn btn-light btn-block\" type=\"submit\" value=\"Add contact\"/>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react'\r\nimport InputFieldGroup from '../Layout/InputFieldGroup';\r\nimport axios from 'axios';\r\n//import uuid from 'uuid';\r\nimport { Consumer } from '../../Context';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        address: '',\r\n        error: {}\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contacts = res.data;\r\n        const { street, suite, city, zipcode } = contacts.address;\r\n\r\n        this.setState({\r\n            name: contacts.name,\r\n            email: contacts.email,\r\n            phone: contacts.phone,\r\n            address: street + ', ' + suite + ', ' + city + ', Zip: ' +zipcode\r\n        })\r\n\r\n\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const {name, email, phone, address } = this.state;\r\n\r\n        // Check error\r\n        if(name === ''){\r\n            this.setState({\r\n                error: {name: 'Name is required'}\r\n            });\r\n            return;\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({\r\n                error: {email: 'Email is required'}\r\n            });\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({\r\n                error: {phone: 'Phone is required'}\r\n            });\r\n            return;\r\n        }\r\n\r\n        const updateContact = {\r\n            name, \r\n            email, \r\n            phone,\r\n            address\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/posts/${id}`, updateContact);\r\n        dispatch({\r\n            type: 'UPDATE_CONTACT',\r\n            payload: res.data\r\n        })\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            address: '',\r\n            error: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, address, error } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n                        <div className=\"container mt-5\">\r\n                            <div className=\"card w-100\">\r\n                                <div className=\"card-header\">Edit contact</div>\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                        <InputFieldGroup name=\"name\" label=\"Name\" placeholder=\"Enter name\" onChange={this.onChange} value={name} error={error.name}/>\r\n                                        <InputFieldGroup name=\"email\" label=\"Email\" type=\"email\" placeholder=\"Enter email\" value={email} onChange={this.onChange} error={error.email}/>\r\n                                        <InputFieldGroup name=\"phone\" label=\"Phone\" placeholder=\"Enter phone\" value={phone}  onChange={this.onChange} error={error.phone}/>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"address\">Address</label>\r\n                                            <textarea className='form-control form-control-lg' name=\"address\" placeholder=\"Enter your address\"  onChange={this.onChange} value={address}>{address}</textarea>\r\n                                        </div>\r\n                                        <input className=\"btn btn-light btn-block\" type=\"submit\" value=\"Update contact\"/>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-5\">\r\n                <h2 className=\"display-4\">About Contact Manager</h2>\r\n                <p className=\"lead\">This is simple app to manage contact info. You can manage your contact info without facing any difficult situation. It's very easily to add, remove, and edit your contact info at anytime. You need to spend just few minute.</p>\r\n                <span className=\"secondary\">Version 1.0.0</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-5\">\r\n            <h2 className=\"display-4 text-danger\">OPPS 404 error!</h2>\r\n            <p className=\"lead\">The existing page not found!</p>\r\n            <p>Please go back to <Link to=\"/\" className=\"text-success\">home</Link></p>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Provider from './Context';\n\nimport Header from './Component/Layout/Header';\nimport Contacts from './Component/Contact/Contacts';\nimport AddContact from './Component/Contact/AddContact';\nimport EditContact from './Component/Contact/EditContact';\nimport About from './Component/Pages/About';\nimport NotFound from './Component/Pages/NotFound';\n\nimport { config } from '@fortawesome/fontawesome-svg-core';\nconfig.autoA11y = true;\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App pb-5\">\n          <Header />\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}